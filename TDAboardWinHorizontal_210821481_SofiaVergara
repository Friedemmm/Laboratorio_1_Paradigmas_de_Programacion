; Descripción: Verificar si en una fila hay 4 piezas juntas del mismo color para ganar.
; Dom: Board (board).
; Rec: int (1 si gana jugador 1, 2 si gana jugador 2, 0 si no hay ganador vertical).
; Tipo recursión: Natural.

(require "TDAplayer_2108221481_SofiaVergara.rkt")

; Función para revisar la victoria en una fila.
(define (board-check-horizontal-win board)
  ; Función para revisar cada fila y ver si hay win.
  (define (check-fila board contador)
    (if (= contador 6)
        0 ; Aún no se gana horizontalmente.
        (if (not (= (fila-contador board contador) 0))
            (fila-contador board contador) ; Retorna el ganador.
            (check-fila board (+ contador 1))
            )
        )
    )

  ; Función auxiliar para ver la fila a verificar.
  (define (fila-contador board contador)
    (win-or-loss (cierto-element board contador))
    )
  
  ; Función para ver si hay victoria en la fila.
  (define (win-or-loss fila)
    (if (< (largo fila) 4)
        0  ; Si tiene menos de 4 piezas, no hay victoria horizontal.
        (check-4-piezas fila 0)
        )
    )
  
  ; Función para verificar 4 piezas iguales en una fila.
  (define (check-4-piezas fila posicion)
    (if (> (+ posicion 3) (- (largo fila) 1))
        0 ; No hay 4 piezas juntas.
        (if (and (list? (cierto-element fila posicion))
                 (list? (cierto-element fila (+ posicion 1)))
                 (list? (cierto-element fila (+ posicion 2)))
                 (list? (cierto-element fila (+ posicion 3)))
                 (equal? (cierto-element fila posicion) (cierto-element fila (+ posicion 1)))
                 (equal? (cierto-element fila posicion) (cierto-element fila (+ posicion 2)))
                 (equal? (cierto-element fila posicion) (cierto-element fila (+ posicion 3)))
                 (not (equal? (cierto-element fila posicion) 0))) ; Que no sea 0.
            (if (equal? (first-element (cierto-element fila posicion)) "red")
                1 ; Retorna 1 si es rojo, 2 si es amarillo.
                2
                )
            (check-4-piezas fila (+ posicion 1))
            )
        
        )
    )
  
  ; Iniciamos chequeando desde la fila 0.
  (check-fila board 0)
  )
